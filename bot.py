import sqlite3
import telebot
from telebot import types

bot = telebot.TeleBot('7063035298:AAGWZFZhS6b216kdQZVM41smvkMAGMDfwzw')
ADMIN_CHAT_ID = 1147185372

conn = sqlite3.connect('events.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS events (event_id INTEGER PRIMARY KEY, description TEXT, organizer_link TEXT)''')
conn.commit()

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
    btn2 = types.KeyboardButton("‚ùì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
    btn3 = types.KeyboardButton("üëë –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ü–æ–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –ï—Å–ª–∏ —á—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –ø–∏—à–∏ /help".format(message.from_user), reply_markup=markup)
    
@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n/delete_event - —É–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)")  
    

def send_to_admin(message):
    user_id = message.from_user.id
    bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}:\n{message.text}")
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    
def add_event(message):
    event_description = message.text
    user = message.from_user
    if user.username:
        organizer_link = f"@{user.username}"
    else:
        organizer_link = f"tg://user?id={user.id}"
    
    cursor.execute("INSERT INTO events (description, organizer_link) VALUES (?, ?)", (event_description, organizer_link))
    conn.commit()
    bot.send_message(message.chat.id, "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    
    
@bot.message_handler(commands=['events'])
def get_events(message):
    cursor.execute("SELECT * FROM events")
    events = cursor.fetchall()
    if events:
        for event in events:
            event_id, description, organizer_link = event
            bot.send_message(ADMIN_CHAT_ID, f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ID: {event_id}\n –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {organizer_link}")
    else:
        bot.send_message(ADMIN_CHAT_ID, "–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
        
@bot.message_handler(commands=['delete_event'])
def delete_event_command(message):
    if message.chat.id == ADMIN_CHAT_ID:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:")
        bot.register_next_step_handler(msg, delete_event)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

def delete_event(message):
    try:
        event_id = int(message.text)
        cursor.execute("DELETE FROM events WHERE event_id = ?", (event_id,))
        conn.commit()
        bot.send_message(ADMIN_CHAT_ID, f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å ID {event_id} —É–¥–∞–ª–µ–Ω–æ.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {e}")        


@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "üëã –°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"):
        if message.from_user.username:
            organizer_link = f"@{message.from_user.username}"
        else:
            organizer_link = f"tg://user?id={message.from_user.id}"
        cursor.execute("SELECT COUNT(*) FROM events WHERE organizer_link = ?", (organizer_link,))
        count = cursor.fetchone()[0]
        
        if count < 2 or message.from_user.id == ADMIN_CHAT_ID:
            bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. \n –†–∞—Å–ø–∏—à–∏ —Å–ª–µ–¥—É—é—â–µ–µ: –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —á—Ç–æ –±—É–¥–µ—Ç")
            bot.register_next_step_handler(message, add_event)
        else:
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
    elif message.text == "‚ùì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        get_events(message)
    
    elif message.text == "üëë –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        bot.send_message(message.chat.id, "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç—Å—è –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å, —Ç–æ —è –∂–¥—É –í–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        bot.register_next_step_handler(message, send_to_admin)
        
    
    else:

        bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É")

bot.polling(none_stop=True)